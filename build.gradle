import com.enricog.tempo.buildsrc.Libs
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.0-beta03'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${Libs.Kotlin.version}"
        classpath "com.google.dagger:hilt-android-gradle-plugin:${Libs.Hilt.androidVersion}"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }

    tasks.withType(KotlinCompile).all {
        kotlinOptions {
            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
            freeCompilerArgs += "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi"
            freeCompilerArgs += "-Xuse-experimental=kotlin.contracts.ExperimentalContracts"
            freeCompilerArgs += "-Xuse-experimental=kotlin.time.ExperimentalTime"
            freeCompilerArgs += "-Xuse-experimental=kotlin.ExperimentalStdlibApi"
            freeCompilerArgs += "-Xuse-experimental=androidx.compose.material.ExperimentalMaterialApi"

            freeCompilerArgs += ["-Xallow-jvm-ir-dependencies", "-Xskip-prerelease-check"]
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}